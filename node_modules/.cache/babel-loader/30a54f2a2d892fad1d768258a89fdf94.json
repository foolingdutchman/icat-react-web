{"ast":null,"code":"'use strict';\n\nvar $ = window.jQuery ? window.jQuery : require('jquery'),\n    _ = require('lodash'),\n    Mousetrap = require('mousetrap'),\n    transit = require('jquery.transit'); // Fix compatibility with global $ and modular transit\n\n\nif (!$.fn.transition) $.fn.transition = transit.fn.transition;\n\nvar Lightbox = function (options) {\n  options = options || {};\n  this.fd = options.fd || 300;\n  this.base_url = options.base_url || '';\n  this.localContent = options.localContent || {};\n  this.isDesktop = $(window).width() > 767;\n  this.isVisible = false;\n  this.lastScrollpos = 0;\n  this.inline_transforms = require('./inline-transforms');\n};\n\nLightbox.prototype = {\n  /**\n   * Applies the provided transforms\n   *\n   * @param {Object} transforms\n   */\n  applyTransforms: function (transforms) {\n    $.each(transforms, function (key, value) {\n      if (this.inline_transforms.hasOwnProperty(key)) this.inline_transforms[key](this, value);\n    }.bind(this));\n  },\n\n  /**\n   * Performs the transformations as specified in the html content\n   *\n   * @param {string} html\n   */\n  do_inline_transforms: function (html) {\n    var match;\n    var patt = /<!--\\s*([a-z\\-]+):\\s*(.*?)\\s*-->/mg;\n    var transforms = {};\n\n    while ((match = patt.exec(html)) !== null) transforms[match[1]] = match[2];\n\n    this.applyTransforms(transforms);\n  },\n\n  /**\n   * Desktop-specific function to be executed when new content is to be shown\n   */\n  show_content_desktop: function () {\n    var $window = $(window);\n    this.$inner.stop().css({\n      'margin-top': -this.$inner.outerHeight() / 2,\n      'margin-left': -this.$inner.outerWidth() / 2,\n      'top': $window.scrollTop() + $window.height() / 2,\n      display: 'block',\n      opacity: 0,\n      transform: 'scale(0.6) translate(0, 40px)'\n    }).transition({\n      opacity: 1,\n      scale: 1,\n      y: 0\n    }, this.fd);\n  },\n\n  /**\n   * Mobile-specific function to be executed when new content is to be shown\n   */\n  show_content_mobile: function () {\n    this.lastScrollpos = $(window).scrollTop();\n    this.$page.hide();\n    this.$inner.show();\n  },\n\n  /**\n   * Show given HTML content in the lightbox\n   *\n   * @param {string|jQuery} content\n   * @private\n   */\n  _show_content: function (content) {\n    this.$content.empty().append(content);\n    this.$loader.hide();\n    this.do_inline_transforms(content.html ? content.html() : content);\n    if (this.isDesktop) this.show_content_desktop();else this.show_content_mobile();\n    this.fixScroll();\n    this.isVisible = true;\n    $('body').addClass(\"lightbox-showing\");\n    var lb = this;\n    Mousetrap.bind(['esc'], function (e) {\n      if (e.preventDefault) e.preventDefault();\n      lb.close();\n      Mousetrap.unbind(['esc']);\n    });\n  },\n\n  /**\n   * Fix page scroll position. Experimental.\n   */\n  fixScroll: function () {\n    if (this.isVisible && this.isDesktop) {\n      var st = $(window).scrollTop();\n      var lt = this.$content.offset().top;\n      var lb = lt + this.$content.height();\n      var minSt = Math.max(0, Math.min(lt - 50, lb + 50 - $(window).height()));\n      var maxSt = Math.max(minSt + 10, lb + 50 - $(window).height(), lt - 50);\n      if (st < minSt) $(window).scrollTop(minSt);else if (st > maxSt) $(window).scrollTop(maxSt);\n    }\n  },\n\n  /**\n   * Load the lightbox content based on the href or lightbox content identifier\n   *\n   * @param {string} target\n   * @param {Object} [ajaxOptions] Optional object containing additional objects to be passed to $.ajax\n   * @param {string} [loaderText] If set, the text will be displayed on screen while the content is being loaded\n   */\n  load_content: function (target, ajaxOptions, loaderText) {\n    if (loaderText) {\n      this.$loader.text(loaderText).show();\n    } else this.$loader.hide();\n\n    this.$over.stop().fadeIn(this.fd);\n    var matches = /@(.*)/.exec(target);\n    if (matches !== null && this.localContent.hasOwnProperty(matches[1])) this._show_content(this.localContent[matches[1]]);else $.ajax($.extend(true, {}, {\n      url: this.base_url + target,\n      headers: {\n        'is-lightbox-content': 'true'\n      },\n      dataType: 'html',\n      success: this._show_content.bind(this)\n    }, ajaxOptions));\n  },\n\n  /**\n   * Show given HTML content or jQuery node in the lightbox\n   *\n   * @param {string|jQuery} content\n   */\n  show_content: function (content) {\n    this.$over.stop().fadeIn(this.fd);\n\n    this._show_content(content);\n  },\n\n  /**\n   * Close the lightbox\n   */\n  close: function () {\n    this.$inner.fadeOut();\n    this.$over.fadeOut(this.fd);\n    $('body').removeClass(\"this-showing\");\n    this.isVisible = false;\n\n    if (!this.isDesktop) {\n      this.$page.show();\n      $(window).scrollTop(this.lastScrollpos);\n    }\n  },\n\n  /**\n   * Hide the lightbox, without removing the \"overlay\". Use this in case the page is about to navigate away\n   */\n  closePending: function () {\n    this.$inner.fadeOut();\n  }\n};\nmodule.exports = Lightbox;","map":{"version":3,"sources":["/Users/hehao/react-icat-web/node_modules/lightbox/assets/scripts/lightbox.js"],"names":["$","window","jQuery","require","_","Mousetrap","transit","fn","transition","Lightbox","options","fd","base_url","localContent","isDesktop","width","isVisible","lastScrollpos","inline_transforms","prototype","applyTransforms","transforms","each","key","value","hasOwnProperty","bind","do_inline_transforms","html","match","patt","exec","show_content_desktop","$window","$inner","stop","css","outerHeight","outerWidth","scrollTop","height","display","opacity","transform","scale","y","show_content_mobile","$page","hide","show","_show_content","content","$content","empty","append","$loader","fixScroll","addClass","lb","e","preventDefault","close","unbind","st","lt","offset","top","minSt","Math","max","min","maxSt","load_content","target","ajaxOptions","loaderText","text","$over","fadeIn","matches","ajax","extend","url","headers","dataType","success","show_content","fadeOut","removeClass","closePending","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar $         = window.jQuery ? window.jQuery : require('jquery'),\n    _         = require('lodash'),\n    Mousetrap = require('mousetrap'),\n    transit   = require('jquery.transit');\n\n// Fix compatibility with global $ and modular transit\nif (!$.fn.transition)\n    $.fn.transition = transit.fn.transition;\n\nvar Lightbox = function (options) {\n\n    options = options || {};\n\n    this.fd           = options.fd || 300;\n    this.base_url     = options.base_url || '';\n    this.localContent = options.localContent || {};\n\n    this.isDesktop     = $(window).width() > 767;\n    this.isVisible     = false;\n    this.lastScrollpos = 0;\n\n    this.inline_transforms = require('./inline-transforms');\n};\n\nLightbox.prototype = {\n\n    /**\n     * Applies the provided transforms\n     *\n     * @param {Object} transforms\n     */\n    applyTransforms: function (transforms) {\n        $.each(transforms, function (key, value) {\n            if (this.inline_transforms.hasOwnProperty(key))\n                this.inline_transforms[key](this, value);\n        }.bind(this));\n    },\n\n    /**\n     * Performs the transformations as specified in the html content\n     *\n     * @param {string} html\n     */\n    do_inline_transforms: function (html) {\n        var match;\n        var patt       = /<!--\\s*([a-z\\-]+):\\s*(.*?)\\s*-->/mg;\n        var transforms = {};\n        while ((match = patt.exec(html)) !== null)\n            transforms[match[1]] = match[2];\n        this.applyTransforms(transforms);\n    },\n\n    /**\n     * Desktop-specific function to be executed when new content is to be shown\n     */\n    show_content_desktop: function () {\n        var $window = $(window);\n        this.$inner.stop().css({\n            'margin-top':  -this.$inner.outerHeight() / 2,\n            'margin-left': -this.$inner.outerWidth() / 2,\n            'top':         $window.scrollTop() + $window.height() / 2,\n            display:       'block',\n            opacity:       0,\n            transform:     'scale(0.6) translate(0, 40px)'\n        }).transition({\n            opacity: 1,\n            scale:   1,\n            y:       0\n        }, this.fd);\n    },\n\n    /**\n     * Mobile-specific function to be executed when new content is to be shown\n     */\n    show_content_mobile: function () {\n        this.lastScrollpos = $(window).scrollTop();\n        this.$page.hide();\n        this.$inner.show();\n    },\n\n    /**\n     * Show given HTML content in the lightbox\n     *\n     * @param {string|jQuery} content\n     * @private\n     */\n    _show_content: function (content) {\n        this.$content.empty().append(content);\n        this.$loader.hide();\n        this.do_inline_transforms(content.html ? content.html() : content);\n        if (this.isDesktop)\n            this.show_content_desktop();\n        else\n            this.show_content_mobile();\n\n        this.fixScroll();\n        this.isVisible = true;\n        $('body').addClass(\"lightbox-showing\");\n        var lb = this;\n\n        Mousetrap.bind(['esc'], function (e) {\n            if (e.preventDefault)\n                e.preventDefault();\n            lb.close();\n            Mousetrap.unbind(['esc']);\n        });\n    },\n\n    /**\n     * Fix page scroll position. Experimental.\n     */\n    fixScroll: function () {\n        if (this.isVisible && this.isDesktop) {\n            var st    = $(window).scrollTop();\n            var lt    = this.$content.offset().top;\n            var lb    = lt + this.$content.height();\n            var minSt = Math.max(0, Math.min(lt - 50, lb + 50 - $(window).height()));\n            var maxSt = Math.max(minSt + 10, lb + 50 - $(window).height(), lt - 50);\n            if (st < minSt)\n                $(window).scrollTop(minSt);\n            else if (st > maxSt)\n                $(window).scrollTop(maxSt);\n        }\n    },\n\n    /**\n     * Load the lightbox content based on the href or lightbox content identifier\n     *\n     * @param {string} target\n     * @param {Object} [ajaxOptions] Optional object containing additional objects to be passed to $.ajax\n     * @param {string} [loaderText] If set, the text will be displayed on screen while the content is being loaded\n     */\n    load_content: function (target, ajaxOptions, loaderText) {\n        if (loaderText) {\n            this.$loader.text(loaderText).show();\n        } else this.$loader.hide();\n        this.$over.stop().fadeIn(this.fd);\n        var matches = /@(.*)/.exec(target);\n        if (matches !== null && this.localContent.hasOwnProperty(matches[1]))\n            this._show_content(this.localContent[matches[1]]);\n        else\n            $.ajax($.extend(true, {}, {\n                url:      this.base_url + target,\n                headers:  {\n                    'is-lightbox-content': 'true'\n                },\n                dataType: 'html',\n                success:  this._show_content.bind(this)\n            }, ajaxOptions));\n    },\n\n    /**\n     * Show given HTML content or jQuery node in the lightbox\n     *\n     * @param {string|jQuery} content\n     */\n    show_content: function (content) {\n        this.$over.stop().fadeIn(this.fd);\n        this._show_content(content);\n    },\n\n    /**\n     * Close the lightbox\n     */\n    close: function () {\n        this.$inner.fadeOut();\n        this.$over.fadeOut(this.fd);\n        $('body').removeClass(\"this-showing\");\n        this.isVisible = false;\n        if (!this.isDesktop) {\n            this.$page.show();\n            $(window).scrollTop(this.lastScrollpos);\n        }\n    },\n\n    /**\n     * Hide the lightbox, without removing the \"overlay\". Use this in case the page is about to navigate away\n     */\n    closePending: function () {\n        this.$inner.fadeOut();\n    }\n};\n\nmodule.exports = Lightbox;"]},"metadata":{},"sourceType":"script"}